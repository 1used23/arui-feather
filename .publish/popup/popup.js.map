{"version":3,"sources":["popup/popup.jsx"],"names":["Popup","state","direction","hasScrollbar","hovered","receivedContainer","styles","top","left","height","gradientStyles","right","anchor","clickEventBindTimeout","domElemPopup","domElemPopupContent","isWindowClickBinded","position","handleResizeWindow","isPropsToPositionCorrect","redraw","context","isInCustomContainer","renderContainerElement","positioningContainerElement","setState","props","autoclosable","ensureClickEvent","target","setGradientStyles","window","addEventListener","nextProps","nextContext","visible","prevProps","onClickOutside","removeEventListener","cn","isContainerReady","getRenderContainer","popup","for","type","size","padded","minWidth","getMinWidth","maxWidth","getMaxWidth","handleMouseEnter","handleMouseLeave","header","inner","handleInnerScroll","content","children","handleResize","event","scrollTop","offsetHeight","scrollHeight","isBottomReached","Math","round","onMouseEnter","onMouseLeave","Error","popupHash","getPopupHash","bestDrawingParams","bottom","overflow","clientHeight","getDrawingCss","isDestroy","isNeedBindEvent","undefined","clearTimeout","setTimeout","handleWindowClick","drawingParams","directions","bestDirection","isHeightAdaptive","isHeightAvailable","isTargetAnchor","isHaveTooltip","width","offsetWidth","contentWidth","contentHeight","offset","main","mainOffset","second","secondaryOffset","fitContainer","fitContaiterOffset","targetPosition","targetAnchor","getPositioningContainer","Component","propTypes","className","oneOfType","func","string","arrayOf","node","oneOf","number","bool","theme","defaultProps","contextTypes"],"mappings":"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","file":"popup.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport debounce from 'lodash.debounce';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport RenderInContainer from '../render-in-container/render-in-container';\nimport ResizeSensor from '../resize-sensor/resize-sensor';\n\nimport { calcBestDrawingParams, calcTargetDimensions, calcFitContainerDimensions } from './calc-drawing-params';\nimport cn from '../cn';\nimport getScrollbarWidth from '../lib/scrollbar-width';\nimport { HtmlElement } from '../lib/prop-types';\nimport { isNodeOutsideElement } from '../lib/window';\nimport performance from '../performance';\n\n/**\n * @typedef {Object} Point\n * @property {Number} left Координата по оси x\n * @property {Number} top Координата по оси y\n */\n\n/**\n * @typedef {Object} PopupOffsetCollection\n * @property {Number} main Смещение в пикселях всплывающего окна относительно основного направления\n * @property {Number} second Смещение в пикселях всплывающего окна относительно второстепенного направления\n * @property {Number} viewport Минимально допустимое смещение в пикселях всплывающего окна от края окна браузера\n */\n\n/**\n * @typedef {Object} PopupHash\n * @property {Array.<String>} directions Список возмножных расположений попапа\n * @property {String} bestDirection Приоритетное расположение\n * @property {Boolean} isHeightAdaptive Подстраивается ли высота попапа под край окна\n * @property {Boolean} isHeightAvailable Занимает ли попап всю возможную высоту\n * @property {Boolean} isTargetAnchor Привязал ли попап к другому элементу\n * @property {Boolean} isHaveTooltip Имеет ли попап тип \"tooltip\"\n * @property {Number} width Ширина попапа\n * @property {Number} height Высота попапа\n * @property {Number} contentWidth Ширина контента в попапе\n * @property {Number} contentHeight Высота контента в попапе\n * @property {PopupOffsetCollection} offset Список смещений попапа\n * @property {Point} targetPosition Координаты точки привязки попапа\n * @property {HTMLElement} targetAnchor Объект элемента, к которому привязан попап, в DOM дереве\n */\n\n/**\n * Компонент popup'а.\n */\n@cn('popup')\n@performance(true)\nclass Popup extends React.Component {\n    static propTypes = {\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Дочерние элементы `Popup` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тип попапа */\n        type: Type.oneOf(['default', 'tooltip']),\n        /** Подстраивание высоты попапа под край окна ('adaptive'), занятие попапом всей возможной высоты ('available'), 'default' */\n        height: Type.oneOf(['default', 'available', 'adaptive']),\n        /** Только для target='anchor', расположение (в порядке приоритета) относительно точки открытия. Первым указывается главное направление, через дефис - второстепенное направление */\n        directions: Type.arrayOf(Type.oneOf([\n            'anchor', 'top-left', 'top-center', 'top-right', 'left-top', 'left-center', 'left-bottom', 'right-top',\n            'right-center', 'right-bottom', 'bottom-left', 'bottom-center', 'bottom-right'\n        ])),\n        /** Привязка компонента к другому элементу на странице, или его расположение независимо от остальных: 'anchor', 'position', 'screen' */\n        target: Type.oneOf(['anchor', 'position', 'screen']),\n        /** Только для target='anchor'. Смещение в пикселях всплывающего окна относительно основного направления */\n        mainOffset: Type.number,\n        /** Только для target='anchor'. Смещение в пикселях всплывающего окна относительно второстепенного направления */\n        secondaryOffset: Type.number,\n        /** Только для target='anchor'. Минимально допустимое смещение в пикселях всплывающего окна от края его контейнера */\n        fitContaiterOffset: Type.number,\n        /** Управление видимостью компонента */\n        visible: Type.bool,\n        /** Управление возможностью автозакрытия компонента */\n        autoclosable: Type.bool,\n        /** Управление выставлением модификатора для добавления внутренних отступов в стилях */\n        padded: Type.bool,\n        /** Элемент закреплённого заголовка для компонента */\n        header: Type.node,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Обработчик события наведения курсора на попап */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с попапа */\n        onMouseLeave: Type.func,\n        /** Обработчик клика вне компонента */\n        onClickOutside: Type.func,\n        /** Минимальная ширина попапа */\n        minWidth: Type.number,\n        /** Максимальная ширина попапа */\n        maxWidth: Type.number,\n        /** Указатель на родительский элемент */\n        for: Type.string\n    };\n\n    static defaultProps = {\n        visible: false,\n        autoclosable: false,\n        padded: true,\n        secondaryOffset: 0,\n        fitContaiterOffset: 0,\n        target: 'anchor',\n        size: 's'\n    };\n\n    static contextTypes = {\n        isInCustomContainer: Type.bool,\n        renderContainerElement: HtmlElement,\n        positioningContainerElement: HtmlElement\n    };\n\n    state = {\n        direction: null,\n        hasScrollbar: false,\n        hovered: false,\n        receivedContainer: false,\n        styles: {\n            top: 0,\n            left: 0,\n            height: 'auto'\n        },\n        gradientStyles: {\n            right: 0\n        }\n    };\n\n    anchor = null;\n    clickEventBindTimeout = null;\n    domElemPopup = null;\n    domElemPopupContent = null;\n    isWindowClickBinded = false;\n    position = null;\n\n    popup;\n    inner;\n    content;\n\n    handleResizeWindow = debounce(() => {\n        if (this.isPropsToPositionCorrect()) {\n            this.redraw();\n        }\n    }, 200);\n\n    componentWillMount() {\n        if (this.context.isInCustomContainer\n            && this.context.renderContainerElement\n            && this.context.positioningContainerElement) {\n            this.setState({\n                receivedContainer: true\n            });\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.autoclosable) {\n            this.ensureClickEvent();\n        }\n\n        if (this.props.height === 'adaptive' || this.props.target === 'screen') {\n            this.setGradientStyles();\n        }\n\n        window.addEventListener('resize', this.handleResizeWindow);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (!this.state.receivedContainer\n            && nextContext.renderContainerElement\n            && nextContext.positioningContainerElement) {\n            this.setState({\n                receivedContainer: true\n            }, () => {\n                if (this.props.visible) {\n                    this.redraw();\n                }\n            });\n\n            return;\n        }\n\n        if (nextProps.visible !== this.props.visible) {\n            this.redraw();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.autoclosable) {\n            if (prevProps.onClickOutside !== this.props.onClickOutside) {\n                this.ensureClickEvent();\n            } else if (prevProps.visible !== this.props.visible) {\n                this.ensureClickEvent(!this.props.visible);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.autoclosable) {\n            this.ensureClickEvent(true);\n        }\n\n        window.removeEventListener('resize', this.handleResizeWindow);\n    }\n\n    render(cn) {\n        if (!this.isContainerReady()) {\n            return false;\n        }\n\n        return (\n            <RenderInContainer container={ this.getRenderContainer() }>\n                <div\n                    ref={ (popup) => { this.popup = popup; } }\n                    data-for={ this.props.for }\n                    className={ cn({\n                        direction: this.state.direction,\n                        type: (this.props.target === 'anchor') && (this.props.type === 'tooltip') && this.props.type,\n                        target: this.props.target,\n                        size: this.props.size,\n                        visible: this.props.visible,\n                        height: this.props.height,\n                        hovered: this.state.hovered,\n                        autoclosable: this.props.autoclosable,\n                        padded: this.props.padded\n                    }) }\n                    style={ {\n                        ...this.state.styles,\n                        minWidth: this.getMinWidth(),\n                        maxWidth: this.getMaxWidth()\n                    } }\n                    onMouseEnter={ this.handleMouseEnter }\n                    onMouseLeave={ this.handleMouseLeave }\n                >\n                    <div className={ cn('container') }>\n                        {\n                            this.props.header && (\n                                <div className={ cn('header') }>\n                                    { this.props.header }\n                                </div>\n                            )\n                        }\n                        <div\n                            ref={ (inner) => { this.inner = inner; } }\n                            className={ cn('inner') }\n                            onScroll={ this.handleInnerScroll }\n                        >\n                            <div className={ cn('content') } ref={ (content) => { this.content = content; } }>\n                                { this.props.children }\n                                <ResizeSensor onResize={ this.handleResize } />\n                            </div>\n                        </div>\n                        {\n                            this.state.hasScrollbar && (\n                                <div className={ cn('gradient') } style={ this.state.gradientStyles } />\n                            )\n                        }\n                    </div>\n                </div>\n            </RenderInContainer>\n        );\n    }\n\n    @autobind\n    handleInnerScroll(event) {\n        let { scrollTop, offsetHeight, scrollHeight } = event.target;\n        let isBottomReached = Math.round(scrollTop) + offsetHeight === scrollHeight;\n\n        if (this.props.height === 'adaptive' || this.props.target === 'screen') {\n            let gradientStyles = {\n                right: this.state.gradientStyles.right\n            };\n\n            if (isBottomReached) {\n                gradientStyles.height = 0;\n            }\n\n            this.setState({\n                gradientStyles\n            });\n        }\n    }\n\n    @autobind\n    handleMouseEnter() {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter();\n        }\n    }\n\n    @autobind\n    handleMouseLeave() {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave();\n        }\n    }\n\n    @autobind\n    handleWindowClick(event) {\n        if (this.props.autoclosable && !!this.domElemPopup && isNodeOutsideElement(event.target, this.domElemPopup)) {\n            if (this.props.onClickOutside) {\n                this.props.onClickOutside(event);\n            }\n        }\n    }\n\n    @autobind\n    handleResize() {\n        if (!this.props.visible) {\n            return;\n        }\n\n        this.redraw();\n    }\n\n    /**\n     * Задает элемент, к которому будет привязан popup.\n     *\n     * @public\n     * @param {HTMLElement} target Элемент, к которому будет привязан popup\n     */\n    setTarget(target) {\n        if (this.anchor === target) {\n            return;\n        }\n\n        this.anchor = target;\n        this.redraw();\n    }\n\n    /**\n     * Задает положение popup.\n     *\n     * @public\n     * @param {Number} left x-coordinate\n     * @param {Number} top y-coordinate\n     */\n    setPosition(left, top) {\n        this.position = { left, top };\n        this.redraw();\n    }\n\n    /**\n     * Возвращает внутренний DOM узел.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getInnerNode() {\n        return this.inner;\n    }\n\n    /**\n     * Возвращает контейнер, в котором отрендерится попап.\n     *\n     * @returns {HTMLElement}\n     */\n    getRenderContainer() {\n        if (!this.context.isInCustomContainer) {\n            return null;\n        }\n\n        return this.context.renderContainerElement;\n    }\n\n    /**\n     * Возвращает контейнер, внутрь которого надо вписать элемент.\n     *\n     * @returns {HTMLElement}\n     */\n    getPositioningContainer() {\n        if (!this.context.isInCustomContainer) {\n            return null;\n        }\n\n        return this.context.positioningContainerElement;\n    }\n\n    /**\n     * Возвращает `true`, если контейнер, в котором должен быть отрисован\n     * `Popup` уже находится в DOM. Для `Popup` без кастомного контейнера\n     * роль контейнера выполняет `document.body` и этот для них этот метод\n     * всегда вернете `true`.\n     *\n     * @returns {Boolean}\n     */\n    isContainerReady() {\n        if (!this.context.isInCustomContainer) {\n            return true;\n        }\n\n        return (\n            this.context.isInCustomContainer && this.state.receivedContainer\n        );\n    }\n\n    /**\n     * Возвращает `true`, если все необходимые для расчета положения `Popup`\n     * внешние props заданы.\n     *\n     * @returns {Boolean}\n     */\n    isPropsToPositionCorrect() {\n        return (this.props.target === 'anchor' && this.anchor)\n            || (this.props.target === 'position' && this.position)\n            || (this.props.target === 'screen');\n    }\n\n    @autobind\n    redraw() {\n        if (!this.isContainerReady()) {\n            return;\n        }\n\n        if (!this.isPropsToPositionCorrect()) {\n            throw new Error('Cannot show popup without target or position');\n        }\n\n        if (!this.domElemPopup) {\n            this.domElemPopup = this.popup;\n            this.domElemPopupContent = this.content;\n        }\n\n        let popupHash = this.getPopupHash();\n        let bestDrawingParams;\n\n        switch (this.props.target) {\n            case 'position':\n                bestDrawingParams = { top: this.position.top, left: this.position.left };\n                break;\n\n            case 'screen':\n                bestDrawingParams = {\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    overflow: this.inner.scrollHeight > this.inner.clientHeight\n                };\n                break;\n\n            case 'anchor':\n                bestDrawingParams = calcBestDrawingParams(\n                    popupHash,\n                    calcTargetDimensions(popupHash),\n                    calcFitContainerDimensions(popupHash)\n                );\n                break;\n        }\n\n        this.setState({\n            direction: bestDrawingParams.direction,\n            hasScrollbar: bestDrawingParams.overflow,\n            styles: this.getDrawingCss(bestDrawingParams)\n        });\n    }\n\n    ensureClickEvent(isDestroy) {\n        let isNeedBindEvent = isDestroy !== undefined ? !isDestroy : this.props.visible;\n\n        // We need timeouts to not to catch the event that causes\n        // popup opening (because it propagates to the `window`).\n        if (this.clickEventBindTimeout) {\n            clearTimeout(this.clickEventBindTimeout);\n            this.clickEventBindTimeout = null;\n        }\n\n        this.clickEventBindTimeout = setTimeout(() => {\n            if (!this.isWindowClickBinded && isNeedBindEvent) {\n                window.addEventListener('click', this.handleWindowClick);\n                window.addEventListener('touchend', this.handleWindowClick);\n                this.isWindowClickBinded = true;\n            } else if (this.isWindowClickBinded && !isNeedBindEvent) {\n                window.removeEventListener('click', this.handleWindowClick);\n                window.removeEventListener('touchend', this.handleWindowClick);\n                this.isWindowClickBinded = false;\n            }\n        }, 0);\n    }\n\n    getDrawingCss(drawingParams) {\n        return {\n            top: drawingParams.top,\n            left: drawingParams.left,\n            right: drawingParams.right,\n            bottom: drawingParams.bottom,\n            height: this.props.height === 'adaptive' ? drawingParams.height : 'auto'\n        };\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getMinWidth() {\n        return this.props.minWidth !== undefined ? this.props.minWidth : 0;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getMaxWidth() {\n        return this.props.maxWidth !== undefined ? this.props.maxWidth : 'none';\n    }\n\n    /**\n     * Get collection of popup properties.\n     *\n     * @returns {PopupHash}\n     */\n    getPopupHash() {\n        return {\n            directions: this.props.directions,\n            bestDirection: this.state.direction,\n            isHeightAdaptive: this.props.height === 'adaptive',\n            isHeightAvailable: this.props.height === 'available',\n            isTargetAnchor: this.props.target === 'anchor',\n            isHaveTooltip: this.props.type === 'tooltip',\n            width: this.domElemPopup.offsetWidth,\n            height: this.domElemPopup.offsetHeight,\n            contentWidth: this.domElemPopupContent.offsetWidth,\n            contentHeight: this.domElemPopupContent.offsetHeight,\n            offset: {\n                main: this.props.mainOffset,\n                second: this.props.secondaryOffset,\n                fitContainer: this.props.fitContaiterOffset\n            },\n            targetPosition: this.position,\n            targetAnchor: this.anchor,\n            fitContainer: this.getPositioningContainer()\n        };\n    }\n\n    setGradientStyles() {\n        this.setState({\n            gradientStyles: {\n                right: getScrollbarWidth()\n            }\n        });\n    }\n}\n\nexport default Popup;\n"]}