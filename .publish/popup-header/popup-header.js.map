{"version":3,"sources":["popup-header/popup-header.jsx"],"names":["PopupHeader","cn","size","props","handleCloseClick","title","onCloseClick","Component","propTypes","oneOf","node","theme","className","oneOfType","func","string"],"mappings":";;;;;;;;iEAAA;;;;AAIA;;;;AACA;;;;AACA;;AAEA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAKMA,W,WAFL,kBAAG,cAAH,C,UACA,4B;;;;;;;;;;;+BAeUC,E,EAAI;AACP,mBACI;AAAA;AAAA;AACI,+BAAYA,GAAG;AACXC,8BAAM,KAAKC,KAAL,CAAWD;AADN,qBAAH;AADhB;AAKI;AACI,+BAAYD,GAAG,QAAH,CADhB;AAEI,0BAAO,KAAKE,KAAL,CAAWD,IAFtB;AAGI,0BAAK,OAHT;AAII,6BAAU,KAAKE;AAJnB,kBALJ;AAWI;AAAA;AAAA,sBAAK,WAAYH,GAAG,OAAH,CAAjB;AACM,yBAAKE,KAAL,CAAWE;AADjB;AAXJ,aADJ;AAiBH;;;2CAGkB;AACf,gBAAI,KAAKF,KAAL,CAAWG,YAAf,EAA6B;AACzB,qBAAKH,KAAL,CAAWG,YAAX;AACH;AACJ;;;;EAvCqB,gBAAMC,S,WACrBC,S,GAAY;AACf;AACAN,UAAM,oBAAKO,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CAFS;AAGf;AACAJ,WAAO,oBAAKK,IAJG;AAKf;AACAC,WAAO,oBAAKF,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CANQ;AAOf;AACAG,eAAW,oBAAKC,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKC,MAAjB,CAAf,CARI;AASf;AACAT,kBAAc,oBAAKQ;AAVJ,C;kBAyCRd,W","file":"popup-header.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\nimport { autobind } from 'core-decorators';\n\nimport Icon from '../icon/icon';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Заголовок popup'а\n */\n@cn('popup-header')\n@performance()\nclass PopupHeader extends React.Component {\n    static propTypes = {\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Содержимое заголовка */\n        title: Type.node,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик клика по кнопке закрытия */\n        onCloseClick: Type.func\n    };\n\n    render(cn) {\n        return (\n            <div\n                className={ cn({\n                    size: this.props.size\n                }) }\n            >\n                <Icon\n                    className={ cn('closer') }\n                    size={ this.props.size }\n                    icon='close'\n                    onClick={ this.handleCloseClick }\n                />\n                <div className={ cn('title') }>\n                    { this.props.title }\n                </div>\n            </div>\n        );\n    }\n\n    @autobind\n    handleCloseClick() {\n        if (this.props.onCloseClick) {\n            this.props.onCloseClick();\n        }\n    }\n}\n\nexport default PopupHeader;\n"]}