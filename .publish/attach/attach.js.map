{"version":3,"sources":["attach/attach.jsx"],"names":["MULTIPLE_TEXTS","getDeclension","number","endingList","ending","isEqualArray","array1","array2","length","every","item","index","Attach","state","focused","hovered","value","nextProps","nextValue","input","setState","cn","size","props","disabled","handleMouseEnter","handleMouseLeave","root","renderButton","renderStatusText","buttonProps","className","icon","id","name","tabIndex","multiple","handleInputChange","handleFocus","handleBlur","accept","handleButtonClick","buttonContent","files","undefined","content","map","file","join","handleClearClick","noFileText","event","performChange","Array","from","target","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","focus","blur","shouldFireChange","onChange","Component","propTypes","array","string","node","shape","text","rightAddons","leftAddons","view","oneOf","type","tag","width","bool","pseudo","title","togglable","checked","theme","oneOfType","func","onMouseDown","onMouseUp","onKeyDown","onKeyUp","defaultProps"],"mappings":";;;;;;;;;;kEAAA;;;;AAIA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAvB;;AAEA;;;;;;;AAOA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,UAA/B,EAA2C;AACvC,QAAIC,eAAJ;;AAEAF,cAAU,GAAV;AACA,QAAIA,UAAU,EAAV,IAAgBA,UAAU,EAA9B,EAAkC;AAC9BE,iBAASD,WAAW,CAAX,CAAT;AACH,KAFD,MAEO;AACH,gBAAQD,SAAS,EAAjB;AACI,iBAAK,CAAL;AACIE,yBAASD,WAAW,CAAX,CAAT;AACA;AACJ,iBAAK,CAAL;AACA,iBAAK,CAAL;AACA,iBAAK,CAAL;AACIC,yBAASD,WAAW,CAAX,CAAT;AACA;AACJ;AACIC,yBAASD,WAAW,CAAX,CAAT;AAVR;AAYH;;AAED,WAAOC,MAAP;AACH;;AAED;;;;;;;AAOA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AAClC,QAAID,WAAWC,MAAf,EAAuB;AACnB,eAAO,IAAP;AACH;;AAED,WAAOD,UACAC,MADA,IAEAD,OAAOE,MAAP,KAAkBD,OAAOC,MAFzB,IAGAF,OAAOG,KAAP,CAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,eAAiBD,SAASH,OAAOI,KAAP,CAA1B;AAAA,KAAb,CAHP;AAIH;;AAED;;;IAKMC,M,WAFL,kBAAG,QAAH,C,UACA,4B;;;;;;;;;;;;;;0LAiFGC,K,GAAQ;AACJC,qBAAS,KADL;AAEJC,qBAAS,KAFL;AAGJC,mBAAO;AAHH,S;;;AAMR;;;;;;;kDAK0BC,S,EAAW;AACjC,gBAAIC,YAAYD,UAAUD,KAAV,IAAmB,EAAnC;;AAEA,gBAAI,CAACX,aAAaa,SAAb,EAAwB,KAAKL,KAAL,CAAWG,KAAnC,CAAL,EAAgD;AAC5C,qBAAKG,KAAL,CAAWH,KAAX,GAAmB,EAAnB;AACA,qBAAKI,QAAL,CAAc,EAAEJ,OAAOE,SAAT,EAAd;AACH;AACJ;;;+BAEMG,E,EAAI;AAAA;;AACP,mBACI;AAAA;AAAA;AACI,+BAAYA,GAAG;AACXC,8BAAM,KAAKC,KAAL,CAAWD,IADN;AAEXE,kCAAU,KAAKD,KAAL,CAAWC,QAFV;AAGXT,iCAAS,KAAKF,KAAL,CAAWE,OAHT;AAIXD,iCAAS,KAAKD,KAAL,CAAWC;AAJT,qBAAH,CADhB;AAOI,kCAAe,KAAKW,gBAPxB;AAQI,kCAAe,KAAKC,gBARxB;AASI,yBAAM,aAACC,IAAD,EAAU;AAAE,+BAAKA,IAAL,GAAYA,IAAZ;AAAmB;AATzC;AAWM,qBAAKC,YAAL,CAAkBP,EAAlB,CAXN;AAYM,qBAAKQ,gBAAL,CAAsBR,EAAtB;AAZN,aADJ;AAgBH;;;qCAEYA,E,EAAI;AAAA;;AACb,gBAAIS,2BACG,KAAKP,KAAL,CAAWO,WADd;AAEAC,2BAAWV,GAAG,QAAH,CAFX;AAGAG,0BAAU,KAAKD,KAAL,CAAWC,QAHrB;AAIAF,sBAAM,KAAKC,KAAL,CAAWD,IAJjB;AAKAU,sBAAM,KAAKT,KAAL,CAAWS,IAAX,GAAkB,KAAKT,KAAL,CAAWS,IAA7B,GAAoC,gDAAM,MAAO,KAAKT,KAAL,CAAWD,IAAxB,EAA+B,MAAK,YAApC,GAL1C;AAMAR,yBAAS,KAAKD,KAAL,CAAWC;AANpB,cAAJ;;AASA,mBACI;AAAA;AAAA,6BACSgB,WADT;AAEI,yBAAI,MAFR;AAGI,gCACI;AAAA;AAAA;AACI,uCAAYT,GAAG,OAAH,CADhB;AAEI,qCAAU,KAAKE,KAAL,CAAWU;AAFzB;AAII;AACI,iCAAM,aAACd,KAAD,EAAW;AAAE,uCAAKA,KAAL,GAAaA,KAAb;AAAqB,6BAD5C;AAEI,kCAAO,KAAKI,KAAL,CAAWW,IAFtB;AAGI,gCAAK,KAAKX,KAAL,CAAWU,EAHpB;AAII,sCAAW,KAAKV,KAAL,CAAWY,QAJ1B;AAKI,uCAAYd,GAAG,SAAH,CALhB;AAMI,kCAAO,KAAKE,KAAL,CAAWD,IANtB;AAOI,kCAAK,MAPT;AAQI,sCAAW,KAAKC,KAAL,CAAWa,QAR1B;AASI,sCAAW,KAAKb,KAAL,CAAWC,QAT1B;AAUI,sCAAW,KAAKa,iBAVpB;AAWI,qCAAU,KAAKC,WAXnB;AAYI,oCAAS,KAAKC,UAZlB;AAaI,oCAAS,KAAKhB,KAAL,CAAWiB;AAbxB;AAJJ,qBAJR;AAyBI,6BAAU,KAAKC;AAzBnB;AA2BM,qBAAKlB,KAAL,CAAWmB;AA3BjB,aADJ;AA+BH;;;yCAEgBrB,E,EAAI;AACjB,gBAAIsB,QAAQ,KAAKpB,KAAL,CAAWP,KAAX,KAAqB4B,SAArB,GACN,KAAKrB,KAAL,CAAWP,KAAX,IAAoB,EADd,GAEN,KAAKH,KAAL,CAAWG,KAFjB;;AAIA,gBAAI2B,SAASA,MAAMnC,MAAN,GAAe,CAA5B,EAA+B;AAC3B,oBAAIqC,UAAWF,MAAMnC,MAAN,KAAiB,CAAlB,GACRmC,MAAM,CAAN,EAAST,IADD,GAGN;AAAA;AAAA;AACI,+BAAQS,MAAMG,GAAN,CAAU;AAAA,mCAAQC,KAAKb,IAAb;AAAA,yBAAV,EAA6Bc,IAA7B;AADZ;AAGML,0BAAMnC,MAHZ;AAAA;AAGuBP,kCAAc0C,MAAMnC,MAApB,EAA4BR,cAA5B;AAHvB,iBAHR;;AAUA,uBACI;AAAA;AAAA,sBAAK,WAAYqB,GAAG,MAAH,CAAjB;AACI;AAAA;AAAA,0BAAM,WAAYA,GAAG,MAAH,CAAlB;AACMwB;AADN,qBADJ;AAII;AACI,mCAAYxB,GAAG,OAAH,CADhB;AAEI,iCAAU,KAAK4B;AAFnB;AAJJ,iBADJ;AAWH;;AAED,mBACI;AAAA;AAAA,kBAAK,WAAY5B,GAAG,SAAH,CAAjB;AACM,qBAAKE,KAAL,CAAW2B;AADjB,aADJ;AAKH;;;0CAGiBC,K,EAAO;AACrB,iBAAKC,aAAL,CAAmBC,MAAMC,IAAN,CAAWH,MAAMI,MAAN,CAAaZ,KAAxB,CAAnB;AACH;;;2CAGkB;AACf,iBAAKS,aAAL,CAAmB,EAAnB;AACH;;;4CAGmB;AAChB,gBAAI,KAAK7B,KAAL,CAAWiC,OAAf,EAAwB;AACpB,qBAAKjC,KAAL,CAAWiC,OAAX;AACH;AACJ;;;sCAGa;AACV,iBAAKpC,QAAL,CAAc,EAAEN,SAAS,IAAX,EAAd;;AAEA,gBAAI,KAAKS,KAAL,CAAWkC,OAAf,EAAwB;AACpB,qBAAKlC,KAAL,CAAWkC,OAAX;AACH;AACJ;;;qCAGY;AACT,iBAAKrC,QAAL,CAAc,EAAEN,SAAS,KAAX,EAAd;;AAEA,gBAAI,KAAKS,KAAL,CAAWmC,MAAf,EAAuB;AACnB,qBAAKnC,KAAL,CAAWmC,MAAX;AACH;AACJ;;;2CAGkB;AACf,iBAAKtC,QAAL,CAAc,EAAEL,SAAS,IAAX,EAAd;;AAEA,gBAAI,KAAKQ,KAAL,CAAWoC,YAAf,EAA6B;AACzB,qBAAKpC,KAAL,CAAWoC,YAAX;AACH;AACJ;;;2CAGkB;AACf,iBAAKvC,QAAL,CAAc,EAAEL,SAAS,KAAX,EAAd;;AAEA,gBAAI,KAAKQ,KAAL,CAAWqC,YAAf,EAA6B;AACzB,qBAAKrC,KAAL,CAAWqC,YAAX;AACH;AACJ;;AAED;;;;;;;;gCAKQ;AACJ,iBAAKzC,KAAL,CAAW0C,KAAX;AACH;;AAED;;;;;;;;+BAKO;AACH,iBAAK1C,KAAL,CAAW2C,IAAX;AACH;;;sCAEa9C,K,EAAO;AAAA;;AACjB,gBAAI+C,mBAAmB,CAAC1D,aAAaW,KAAb,EAAoB,KAAKH,KAAL,CAAWG,KAA/B,CAAxB;;AAEA,iBAAKI,QAAL,CAAc,EAAEJ,YAAF,EAAd,EAAyB,YAAM;AAC3B,oBAAI,OAAKO,KAAL,CAAWyC,QAAX,IAAuBD,gBAA3B,EAA6C;AACzC,2BAAKxC,KAAL,CAAWyC,QAAX,CAAoBhD,MAAMR,MAAN,GAAeQ,KAAf,GAAuB,IAA3C;AACH;AACJ,aAJD;AAKH;;;;EArRgB,gBAAMiD,S,WAChBC,S,GAAY;AACf;AACAlD,WAAO,oBAAKmD,KAFG,EAEI;AACnB;AACAjC,UAAM,oBAAKkC,MAJI;AAKf;AACAnC,QAAI,oBAAKmC,MANM;AAOf;AACApC,UAAM,oBAAKqC,IARI;AASf;AACAlC,cAAU,oBAAKjC,MAVA;AAWf;AACAgD,gBAAY,oBAAKkB,MAZF;AAaf;AACA1B,mBAAe,oBAAK2B,IAdL;AAef;AACAvC,iBAAa,oBAAKwC,KAAL,CAAW;AACpBC,cAAM,oBAAKF,IADS;AAEpBG,qBAAa,oBAAKH,IAFE;AAGpBI,oBAAY,oBAAKJ,IAHG;AAIpBK,cAAM,oBAAKC,KAAL,CAAW,CAAC,SAAD,EAAY,QAAZ,EAAsB,OAAtB,EAA+B,OAA/B,CAAX,CAJc;AAKpBC,cAAM,oBAAKD,KAAL,CAAW,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAX,CALc;AAMpBE,aAAK,oBAAKF,KAAL,CAAW,CAAC,QAAD,EAAW,MAAX,CAAX,CANe;AAOpBG,eAAO,oBAAKH,KAAL,CAAW,CAAC,SAAD,EAAY,WAAZ,CAAX,CAPa;AAQpBrD,cAAM,oBAAKqD,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CARc;AASpBnD,kBAAU,oBAAKuD,IATK;AAUpBC,gBAAQ,oBAAKD,IAVO;AAWpB9C,YAAI,oBAAKmC,MAXW;AAYpBlC,cAAM,oBAAKkC,MAZS;AAapBa,eAAO,oBAAKb,MAbQ;AAcpBjC,kBAAU,oBAAKjC,MAdK;AAepBgF,mBAAW,oBAAKP,KAAL,CAAW,CAAC,OAAD,EAAU,OAAV,CAAX,CAfS;AAgBpBQ,iBAAS,oBAAKJ,IAhBM;AAiBpBK,eAAO,oBAAKT,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAjBa;AAkBpB5C,mBAAW,oBAAKsD,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKlB,MAAjB,CAAf,CAlBS;AAmBpBZ,iBAAS,oBAAK8B,IAnBM;AAoBpB7B,iBAAS,oBAAK6B,IApBM;AAqBpB5B,gBAAQ,oBAAK4B,IArBO;AAsBpB3B,sBAAc,oBAAK2B,IAtBC;AAuBpB1B,sBAAc,oBAAK0B,IAvBC;AAwBpBC,qBAAa,oBAAKD,IAxBE;AAyBpBE,mBAAW,oBAAKF,IAzBI;AA0BpBG,mBAAW,oBAAKH,IA1BI;AA2BpBI,iBAAS,oBAAKJ;AA3BM,KAAX,CAhBE;AA6Cf;AACA9C,YAAQ,oBAAK4B,MA9CE;AA+Cf;AACA5C,cAAU,oBAAKuD,IAhDA;AAiDf;AACA3C,cAAU,oBAAK2C,IAlDA;AAmDf;AACAzD,UAAM,oBAAKqD,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CApDS;AAqDf;AACAS,WAAO,oBAAKT,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAtDQ;AAuDf;AACA5C,eAAW,oBAAKsD,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKlB,MAAjB,CAAf,CAxDI;AAyDf;AACAZ,aAAS,oBAAK8B,IA1DC;AA2Df;AACAtB,cAAU,oBAAKsB,IA5DA;AA6Df;AACA7B,aAAS,oBAAK6B,IA9DC;AA+Df;AACA5B,YAAQ,oBAAK4B,IAhEE;AAiEf;AACA3B,kBAAc,oBAAK2B,IAlEJ;AAmEf;AACA1B,kBAAc,oBAAK0B;AApEJ,C,UAuEZK,Y,GAAe;AAClBjD,mBAAe,eADG;AAElBpB,UAAM,GAFY;AAGlBE,cAAU,KAHQ;AAIlBY,cAAU,KAJQ;AAKlBc,gBAAY;AALM,C;kBAgNXtC,M","file":"attach.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Button from '../button/button';\nimport Icon from '../icon/icon';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\nconst MULTIPLE_TEXTS = ['файл', 'файла', 'файлов'];\n\n/**\n * Возвращает слово в нужном склонении.\n *\n * @param {Number} number Количество\n * @param {Array.<String>} endingList Варианты слов, например: 'день', 'дня', 'дней'\n * @returns {String}\n */\nfunction getDeclension(number, endingList) {\n    let ending;\n\n    number %= 100;\n    if (number >= 11 && number <= 19) {\n        ending = endingList[2];\n    } else {\n        switch (number % 10) {\n            case 1:\n                ending = endingList[0];\n                break;\n            case 2:\n            case 3:\n            case 4:\n                ending = endingList[1];\n                break;\n            default:\n                ending = endingList[2];\n        }\n    }\n\n    return ending;\n}\n\n/**\n * Производит поэлементное сравнение массивов.\n *\n * @param {Array} array1 Первый массив\n * @param {Array} array2 Второй массив\n * @returns {Boolean}\n */\nfunction isEqualArray(array1, array2) {\n    if (array1 === array2) {\n        return true;\n    }\n\n    return array1\n        && array2\n        && array1.length === array2.length\n        && array1.every((item, index) => item === array2[index]);\n}\n\n/**\n * Компонент прикрепления файлов\n */\n@cn('attach')\n@performance()\nclass Attach extends React.Component {\n    static propTypes = {\n        /** Содержимое поля ввода, указанное по умолчанию. Принимает массив объектов типа File или null. */\n        value: Type.array, // eslint-disable-line react/forbid-prop-types\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Иконка */\n        icon: Type.node,\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Текст для случая, когда файл не загружен */\n        noFileText: Type.string,\n        /** Содержимое кнопки для выбора файла */\n        buttonContent: Type.node,\n        /** Свойства для кнопки */\n        buttonProps: Type.shape({\n            text: Type.node,\n            rightAddons: Type.node,\n            leftAddons: Type.node,\n            view: Type.oneOf(['default', 'action', 'extra', 'other']),\n            type: Type.oneOf(['button', 'reset', 'submit']),\n            tag: Type.oneOf(['button', 'span']),\n            width: Type.oneOf(['default', 'available']),\n            size: Type.oneOf(['s', 'm', 'l', 'xl']),\n            disabled: Type.bool,\n            pseudo: Type.bool,\n            id: Type.string,\n            name: Type.string,\n            title: Type.string,\n            tabIndex: Type.number,\n            togglable: Type.oneOf(['check', 'radio']),\n            checked: Type.bool,\n            theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n            className: Type.oneOfType([Type.func, Type.string]),\n            onClick: Type.func,\n            onFocus: Type.func,\n            onBlur: Type.func,\n            onMouseEnter: Type.func,\n            onMouseLeave: Type.func,\n            onMouseDown: Type.func,\n            onMouseUp: Type.func,\n            onKeyDown: Type.func,\n            onKeyUp: Type.func\n        }),\n        /** Доступные для выбора MIME типы файлов */\n        accept: Type.string,\n        /** Управление возможностью изменения значения компонента */\n        disabled: Type.bool,\n        /** Управляет возможностью выбора нескольких файлов */\n        multiple: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик клика по компоненту кнопки */\n        onClick: Type.func,\n        /** Обработчик изменения значения 'value' */\n        onChange: Type.func,\n        /** Обработчик фокуса компонента */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса компонента */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на кнопку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с кнопки */\n        onMouseLeave: Type.func\n    };\n\n    static defaultProps = {\n        buttonContent: 'Выберите файл',\n        size: 'm',\n        disabled: false,\n        multiple: false,\n        noFileText: 'Нет файла'\n    };\n\n    state = {\n        focused: false,\n        hovered: false,\n        value: []\n    };\n\n    /**\n     * @type {HTMLInputElement}\n     */\n    input;\n\n    componentWillReceiveProps(nextProps) {\n        let nextValue = nextProps.value || [];\n\n        if (!isEqualArray(nextValue, this.state.value)) {\n            this.input.value = '';\n            this.setState({ value: nextValue });\n        }\n    }\n\n    render(cn) {\n        return (\n            <span\n                className={ cn({\n                    size: this.props.size,\n                    disabled: this.props.disabled,\n                    hovered: this.state.hovered,\n                    focused: this.state.focused\n                }) }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                ref={ (root) => { this.root = root; } }\n            >\n                { this.renderButton(cn) }\n                { this.renderStatusText(cn) }\n            </span>\n        );\n    }\n\n    renderButton(cn) {\n        let buttonProps = {\n            ...this.props.buttonProps,\n            className: cn('button'),\n            disabled: this.props.disabled,\n            size: this.props.size,\n            icon: this.props.icon ? this.props.icon : <Icon size={ this.props.size } icon='attachment' />,\n            focused: this.state.focused\n        };\n\n        return (\n            <Button\n                { ...buttonProps }\n                tag='span'\n                leftAddons={\n                    <label\n                        className={ cn('label') }\n                        htmlFor={ this.props.id }\n                    >\n                        <input\n                            ref={ (input) => { this.input = input; } }\n                            name={ this.props.name }\n                            id={ this.props.id }\n                            tabIndex={ this.props.tabIndex }\n                            className={ cn('control') }\n                            size={ this.props.size }\n                            type='file'\n                            multiple={ this.props.multiple }\n                            disabled={ this.props.disabled }\n                            onChange={ this.handleInputChange }\n                            onFocus={ this.handleFocus }\n                            onBlur={ this.handleBlur }\n                            accept={ this.props.accept }\n                        />\n                    </label>\n                }\n                onClick={ this.handleButtonClick }\n            >\n                { this.props.buttonContent }\n            </Button>\n        );\n    }\n\n    renderStatusText(cn) {\n        let files = this.props.value !== undefined\n            ? this.props.value || []\n            : this.state.value;\n\n        if (files && files.length > 0) {\n            let content = (files.length === 1)\n                ? files[0].name\n                : (\n                    <abbr\n                        title={ files.map(file => file.name).join() }\n                    >\n                        { files.length } { getDeclension(files.length, MULTIPLE_TEXTS) }\n                    </abbr>\n                );\n\n            return (\n                <div className={ cn('file') }>\n                    <span className={ cn('text') }>\n                        { content }\n                    </span>\n                    <button\n                        className={ cn('clear') }\n                        onClick={ this.handleClearClick }\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className={ cn('no-file') }>\n                { this.props.noFileText }\n            </div>\n        );\n    }\n\n    @autobind\n    handleInputChange(event) {\n        this.performChange(Array.from(event.target.files));\n    }\n\n    @autobind\n    handleClearClick() {\n        this.performChange([]);\n    }\n\n    @autobind\n    handleButtonClick() {\n        if (this.props.onClick) {\n            this.props.onClick();\n        }\n    }\n\n    @autobind\n    handleFocus() {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus();\n        }\n    }\n\n    @autobind\n    handleBlur() {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur();\n        }\n    }\n\n    @autobind\n    handleMouseEnter() {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter();\n        }\n    }\n\n    @autobind\n    handleMouseLeave() {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave();\n        }\n    }\n\n    /**\n     * Ставит фокус на контрол.\n     *\n     * @public\n     */\n    focus() {\n        this.input.focus();\n    }\n\n    /**\n     * Убирает фокус с контрола.\n     *\n     * @public\n     */\n    blur() {\n        this.input.blur();\n    }\n\n    performChange(value) {\n        let shouldFireChange = !isEqualArray(value, this.state.value);\n\n        this.setState({ value }, () => {\n            if (this.props.onChange && shouldFireChange) {\n                this.props.onChange(value.length ? value : null);\n            }\n        });\n    }\n}\n\nexport default Attach;\n"]}