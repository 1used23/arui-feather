{"version":3,"sources":["menu-item/menu-item.jsx"],"names":["MenuItem","state","hovered","focused","cn","content","props","children","value","itemElement","menuItemProps","ref","root","type","control","size","popup","directions","target","handleClick","handleMouseEnter","handleMouseLeave","onClick","onMouseEnter","onMouseLeave","view","disabled","checked","url","handleFocus","handleBlur","hidden","undefined","event","preventDefault","setState","onFocus","onBlur","focus","document","activeElement","blur","Component","propTypes","oneOf","string","oneOfType","number","node","bool","arrayOf","theme","className","func","defaultProps"],"mappings":"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","file":"menu-item.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Dropdown from '../dropdown/dropdown';\nimport Link from '../link/link';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент элемента меню. Как правило, используется совместно с `Menu`.\n */\n@cn('menu-item')\n@performance()\nclass MenuItem extends React.Component {\n    static propTypes = {\n        /** Тип элемента меню */\n        type: Type.oneOf(['link', 'dropdown', 'block']),\n        /** Тип ссылки, для компонента с type='link' */\n        view: Type.oneOf(['default', 'link', 'pseudo']),\n        /** href ссылки, для компонента с type='link' */\n        url: Type.string,\n        /** target для ссылки */\n        target: Type.oneOf(['_self', '_blank', '_parent', '_top']),\n        /** Уникальное значение элемента. Для использования в Menu */\n        value: Type.oneOfType([\n            Type.string,\n            Type.number\n        ]),\n        /** Попап для компонента с type='dropdown' */\n        popup: Type.node,\n        /** Управление возможностью выбирать данный компонент */\n        disabled: Type.bool,\n        /** Управление состоянием выбран/не выбран компонента */\n        checked: Type.bool,\n        /** Управление видимостью компонента */\n        hidden: Type.bool,\n        /** Управление визуальным выделением компонента */\n        hovered: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Дочерние элементы `MenuItem` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Только для type='link', обработчик клика по компоненту */\n        onClick: Type.func,\n        /** Обработчик фокуса компонента */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса компонента */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на элемент меню */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с элемента меню */\n        onMouseLeave: Type.func\n    };\n\n    static defaultProps = {\n        type: 'link'\n    };\n\n    state = {\n        hovered: false,\n        focused: false\n    };\n\n    root;\n    control;\n\n    render(cn) {\n        let content = this.props.children || this.props.value;\n        let itemElement;\n        let menuItemProps = {\n            ref: (root) => { this.root = root; }\n        };\n\n        switch (this.props.type) {\n            case 'dropdown':\n                itemElement = (\n                    <Dropdown\n                        ref={ (control) => { this.control = control; } }\n                        className={ `${cn('control')} ${cn('dropdown')}` }\n                        size={ this.props.size }\n                        opened={ this.state.hovered }\n                        switcherType='link'\n                        switcherText={ content }\n                        popupContent={ this.props.popup }\n                        popupProps={ {\n                            directions: ['bottom-left'],\n                            target: 'anchor'\n                        } }\n                        mode='hover'\n                        onSwitcherClick={ this.handleClick }\n                        onSwitcherMouseEnter={ this.handleMouseEnter }\n                        onSwitcherMouseLeave={ this.handleMouseLeave }\n                    />\n                );\n                break;\n            case 'block':\n                menuItemProps = {\n                    ref: (control) => {\n                        this.root = control;\n                        this.control = control;\n                    },\n                    onClick: this.handleClick,\n                    onMouseEnter: this.handleMouseEnter,\n                    onMouseLeave: this.handleMouseLeave\n                };\n                itemElement = <span className={ cn('control') }>{ content }</span>;\n\n                break;\n            case 'link':\n            default:\n                itemElement = (\n                    <Link\n                        ref={ (control) => { this.control = control; } }\n                        className={ `${cn('control')} ${cn('link')}` }\n                        size={ this.props.size }\n                        pseudo={ this.props.view === 'pseudo' }\n                        disabled={ this.props.disabled }\n                        checked={ this.props.checked }\n                        text={ content }\n                        url={ this.props.url }\n                        target={ this.props.target }\n                        onClick={ this.handleClick }\n                        onFocus={ this.handleFocus }\n                        onBlur={ this.handleBlur }\n                        onMouseEnter={ this.handleMouseEnter }\n                        onMouseLeave={ this.handleMouseLeave }\n                    />\n                );\n                break;\n        }\n\n        return (\n            <div\n                className={ cn({\n                    disabled: this.props.disabled,\n                    checked: this.props.checked,\n                    hidden: this.props.hidden,\n                    type: this.props.type,\n                    hovered: this.props.hovered === undefined ? this.state.hovered : this.props.hovered,\n                    focused: this.state.focused\n                }) }\n                { ...menuItemProps }\n            >\n                { itemElement }\n            </div>\n        );\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.root;\n    }\n\n    /**\n     * Устанавливает фокус на элементе меню.\n     *\n     * @public\n     */\n    focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с элемента меню.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default MenuItem;\n"]}