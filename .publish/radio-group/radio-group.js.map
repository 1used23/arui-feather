{"version":3,"sources":["radio-group/radio-group.jsx"],"names":["RadioGroup","state","value","focused","cn","children","props","name","radioGroupParts","disabled","undefined","length","type","width","radios","Children","forEach","radio","index","cloneElement","ref","push","error","Boolean","checked","onChange","handleRadioChange","invalid","handleFocus","handleBlur","label","setState","event","onFocus","onBlur","focus","document","activeElement","blur","Component","propTypes","oneOf","string","node","bool","oneOfType","arrayOf","theme","className","func","defaultProps"],"mappings":"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","file":"radio-group.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport createFragment from 'react-addons-create-fragment';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент группы радио-кнопок.\n */\n@cn('radio-group')\n@performance()\nclass RadioGroup extends React.Component {\n    static propTypes = {\n        /** Тип группы кнопок */\n        type: Type.oneOf(['normal', 'button', 'line']),\n        /** Значение выбранной радио-кнопки */\n        value: Type.string,\n        /** Отображение попапа с ошибкой в момент когда фокус находится на компоненте */\n        error: Type.node,\n        /** Управление шириной группы кнопок для типа 'button'. При значении 'available' растягивает группу на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Управление возможностью изменения состояния 'checked' дочерних компонентов `Radio` */\n        disabled: Type.bool,\n        /** Дочерние элементы `RadioGroup`, как правило, компоненты `Radio` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Лейбл для группы */\n        label: Type.node,\n        /** Обработчик фокуса радиогруппы */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса с радиогруппы */\n        onBlur: Type.func,\n        /** Обработчик изменения значения 'checked' одного из дочерних радио-кнопок */\n        onChange: Type.func\n    };\n\n    static defaultProps = {\n        type: 'normal'\n    };\n\n    state = {\n        value: '',\n        focused: false\n    };\n\n    render(cn) {\n        let children = null;\n        let props = { name: this.props.name };\n        let radioGroupParts = {};\n\n        if (this.props.disabled !== undefined) {\n            props.disabled = this.props.disabled;\n        }\n\n        if (this.props.children) {\n            children = this.props.children.length ? this.props.children : [this.props.children];\n        }\n\n        if (this.props.type === 'button') {\n            props = { ...props, width: this.props.width };\n        }\n\n        if (children) {\n            this.radios = [];\n\n            let value = this.props.value !== undefined\n                ? this.props.value\n                : this.state.value;\n\n            React.Children.forEach(children, (radio, index) => {\n                radioGroupParts[`radio-${index}`] = React.cloneElement(radio, {\n                    ref: radio => this.radios.push(radio),\n                    error: radio.props.error !== undefined\n                        ? radio.props.error : Boolean(this.props.error),\n                    checked: radio.props.checked !== undefined\n                        ? radio.props.checked : (value === radio.props.value),\n                    onChange: radio.props.onChange !== undefined\n                        ? radio.props.onChange : this.handleRadioChange,\n                    ...props\n                });\n            });\n        }\n        return (\n            <span\n                className={\n                    `${cn({\n                        type: this.props.type,\n                        invalid: !!this.props.error,\n                        ...props\n                    })} control-group${this.props.error ? ' control-group_invalid' : ''}`\n                }\n                role='group'\n                tabIndex='-1'\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n            >\n                {\n                    !!this.props.label &&\n                    <div className={ cn('label') }>\n                        { this.props.label }\n                    </div>\n                }\n                { createFragment(radioGroupParts) }\n                {\n                    this.props.error &&\n                    <span className={ cn('sub') }>\n                        { this.props.error }\n                    </span>\n                }\n            </span>\n        );\n    }\n\n    @autobind\n    handleRadioChange(value) {\n        if (this.state.value !== value) {\n            this.setState({ value });\n        }\n\n        if (this.props.value !== value && this.props.onChange) {\n            this.props.onChange(value);\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    /**\n     * Устанавливает фокус на первую радиокнопку в группе.\n     *\n     * @public\n     */\n    focus() {\n        if (this.radios && this.radios[0]) {\n            this.radios[0].focus();\n        }\n    }\n\n    /**\n     * Убирает фокус с группы радио-кнопок.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default RadioGroup;\n"]}